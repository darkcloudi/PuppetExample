<assembly>
     <id>puppet</id>
    <!-- <includeBaseDirectory>false</includeBaseDirectory> -->
    <!-- <useProjectArtifact>false</useProjectArtifact>  -->
    <formats>
        <format>tar.gz</format>
    </formats>
	<!-- Appears to work with moduleSet -->

    <moduleSets>
        <moduleSet>
            <useAllReactorProjects>true</useAllReactorProjects>
             <includes>
                <include>com.sam:myWebApp:war:${project.version}</include>  
            </includes>
           <binaries>
                <outputDirectory>myWebApp/files</outputDirectory>
                <unpack>false</unpack>
            </binaries>
        </moduleSet>
    </moduleSets>
   
       
        
      <!--This is my dependency I want to include when I am building the project 
      Old dependencies which also need to specified in the dependencies -->
  <!-- 
    <dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <includes>
                <include>com.sam:myWebApp:war:1.0.0-SNAPSHOT</include>
            </includes>
            <outputDirectory>myWebApp/files</outputDirectory>
        </dependencySet>
    </dependencySets>
 -->

    <fileSets>
      <fileSet>
            <filtered>true</filtered>
            <directory>${basedir}/src/main/resources/mywebapp/manifests</directory>
            <includes>
                <include>init.pp</include>
            </includes>
            <outputDirectory>/mywebapp/manifests</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>src/main/resources/mywebapp</directory>
            <outputDirectory>/mywebapp</outputDirectory>
            <includes>
                <include>**</include>
            </includes>
            <excludes>
                <exclude>manifests/init.pp</exclude>
            </excludes>

        </fileSet>
        <fileSet>
            <filtered>true</filtered>
            <directory>${project.build.directory}/files</directory>
            <outputDirectory>/mywebapp/files</outputDirectory>
            <includes>
                <include>**</include>
            </includes>

        </fileSet>
        <!-- 
        <fileSet>
            <directory>${project.build.directory}</directory>
            <outputDirectory></outputDirectory>
            <includes>
                <include>*.war</include>
            </includes>
        </fileSet>
         -->
    </fileSets>
</assembly>
 